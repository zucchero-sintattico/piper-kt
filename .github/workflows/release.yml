name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  JAVA_VERSION: 17

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Build with Gradle
        uses: DanySK/build-check-deploy-gradle-action@2.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          should-run-codecov: false

  test:
    needs: build
    if: ${{ needs.build.result == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - ubuntu-22.04
          - windows-2022
        java-version: [ 17, 21 ]
        java-distribution:
          - adopt
          - corretto
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ matrix.java-version }}-${{ matrix.java-distribution }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - uses: DanySK/build-check-deploy-gradle-action@2.4.3
        with:
          java-version: ${{ matrix.java-version }}
          java-distribution: ${{ matrix.java-distribution }}
          should-run-codecov: false

  release:
    needs:
      - build
      - test
    if: >-
      always()
      && github.event_name != 'pull_request'
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
    concurrency:
      group: release-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
      - name: Produce coverage report
        run: ./gradlew koverXmlReport --parallel
      - name: Push coverage report
        uses: codecov/codecov-action@v4.0.2
        with:
          files: ./build/reports/kover/report.xml
          verbose: true
          slug: zucchero-sintattico/piper-kt
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: npm install
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - name: Check version for release
        id: check-version
        shell: bash
        run: |
          GIT_VERSION=$(git describe --tags --exact-match HEAD || echo '')
          if [ -n "$GIT_VERSION" ]; then
            echo "version=$(echo $GIT_VERSION | sed 's/^v//')" >> "$GITHUB_OUTPUT"
          fi

  pages-deploy:
    needs: release
    if: >-
      always()
      && needs.release.result == 'success'
      && needs.release.outputs.version != ''
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - run: echo "Deploying version ${{ needs.release.outputs.version }} to GitHub Page"
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Create artifacts directory
        run: mkdir -p ./tmp-site
      - name: Build documentation
        run: |
          ./gradlew -PforceVersion=${{ needs.release.outputs.version }} dokkaHtmlMultiModule --parallel
          cp -r ./build/dokka/htmlMultiModule ./tmp-site/docs
#      - name: Copy features report
#        run: cp -r ./build/reports/tests/test ./tmp-site/features
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: ./tmp-site
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.4
